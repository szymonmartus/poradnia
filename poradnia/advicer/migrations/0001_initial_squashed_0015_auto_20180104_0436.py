# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-04-16 04:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('advicer', '0001_initial'), ('advicer', '0002_auto_20150325_1857'), ('advicer', '0003_auto_20150325_1858'), ('advicer', '0004_auto_20150503_1741'), ('advicer', '0005_advice_case'), ('advicer', '0006_auto_20150514_0226'), ('advicer', '0007_auto_20150520_1509'), ('advicer', '0008_auto_20150708_2005'), ('advicer', '0009_attachment'), ('advicer', '0010_auto_20150722_1503'), ('advicer', '0011_auto_20150725_1213'), ('advicer', '0012_auto_20151124_1541'), ('advicer', '0013_auto_20151218_0035'), ('advicer', '0014_auto_20161208_0902'), ('advicer', '0015_auto_20180104_0436')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cases', '0019_auto_20150503_1741'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=50, null=True)),
                ('grant_on', models.DateTimeField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Problem regarding the right to information',
                'verbose_name_plural': 'Problems regarding the right to information',
            },
        ),
        migrations.CreateModel(
            name='InstitutionKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Institution kind',
                'verbose_name_plural': 'Institution kinds',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'The thematic scope of the request',
                'verbose_name_plural': 'Thematic scopes of requests',
            },
        ),
        migrations.CreateModel(
            name='PersonKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Type of person who reporting the advice',
                'verbose_name_plural': 'Types of people who report to for advice',
            },
        ),
        migrations.AddField(
            model_name='advice',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.Area'),
        ),
        migrations.AddField(
            model_name='advice',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advice_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='advice',
            name='institution_kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.InstitutionKind'),
        ),
        migrations.AddField(
            model_name='advice',
            name='issues',
            field=models.ManyToManyField(blank=True, null=True, to='advicer.Issue'),
        ),
        migrations.AddField(
            model_name='advice',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='advice_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='advice',
            name='person_kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.PersonKind'),
        ),
        migrations.AlterModelOptions(
            name='advice',
            options={'ordering': ['created_on'], 'permissions': ('can_view_all_advices', 'Can view all advices')},
        ),
        migrations.AddField(
            model_name='advice',
            name='advicer',
            field=models.ForeignKey(default=1, help_text='Person who give a advice', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Advicer'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='advice',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.Area', verbose_name='Area'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='comment',
            field=models.TextField(verbose_name='Comment'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advice_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created on'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='grant_on',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Grant on'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='institution_kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.InstitutionKind', verbose_name='Kind of institution'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='issues',
            field=models.ManyToManyField(blank=True, null=True, to='advicer.Issue', verbose_name='Issues'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='advice_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified by'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='modified_on',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Modified on'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='person_kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.PersonKind', verbose_name='Kind of person '),
        ),
        migrations.AlterField(
            model_name='advice',
            name='subject',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Subject'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='visible',
            field=models.BooleanField(default=True, verbose_name='Visible'),
        ),
        migrations.AlterModelOptions(
            name='advice',
            options={'ordering': ['created_on'], 'permissions': (('can_view_all_advices', 'Can view all advices'),)},
        ),
        migrations.AddField(
            model_name='advice',
            name='case',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.Case', verbose_name='Case'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='comment',
            field=models.TextField(blank=True, null=True, verbose_name='Comment'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='letters/%Y/%m/%d', verbose_name='File')),
                ('advice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advicer.Advice')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
            },
        ),
        migrations.AlterModelOptions(
            name='advice',
            options={'ordering': ['created_on'], 'permissions': (('can_view_all_advices', 'Can view all advices'),), 'verbose_name': 'Advice', 'verbose_name_plural': 'Advices'},
        ),
        migrations.AlterField(
            model_name='advice',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Creation date'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='modified_on',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Modification date'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='issues',
            field=models.ManyToManyField(blank=True, to='advicer.Issue', verbose_name='Issues'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='grant_on',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Grant on'),
        ),
        migrations.AddField(
            model_name='advice',
            name='helped',
            field=models.NullBooleanField(verbose_name='We helped?'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.Area', verbose_name='Problem regarding the right to information'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='institution_kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.InstitutionKind', verbose_name='Institution kind'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='issues',
            field=models.ManyToManyField(blank=True, to='advicer.Issue', verbose_name='Thematic scopes of requests'),
        ),
        migrations.AlterField(
            model_name='advice',
            name='person_kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advicer.PersonKind', verbose_name='Type of person who reporting the advice'),
        ),
    ]
