# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-04-16 04:00
from __future__ import unicode_literals

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import poradnia.users.models
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    replaces = [('users', '0006_user_picture'), ('users', '0007_migrate_avatars'), ('users', '0008_auto_20151108_0017'), ('users', '0009_user_codename'), ('users', '0010_auto_20151217_2355'), ('users', '0011_auto_20160409_2334'), ('users', '0012_user_created_on'), ('users', '0013_profile_event_reminder_time'), ('users', '0014_auto_20170317_1927'), ('users', '0015_profile_email_footer'), ('users', '0016_auto_20170929_0612'), ('users', '0017_auto_20180104_0436')]

    dependencies = [
        ('users', '0005_auto_20150712_1524'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='picture',
            field=sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to=b'avatars', verbose_name='Avatar'),
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['pk'], 'permissions': (('can_view_other', 'Can view other'),), 'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AddField(
            model_name='user',
            name='codename',
            field=models.CharField(blank=True, max_length=15, null=True, verbose_name='Codename'),
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', poradnia.users.models.CustomUserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username'),
        ),
        migrations.AddField(
            model_name='user',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created on'),
        ),
        migrations.AddField(
            model_name='profile',
            name='event_reminder_time',
            field=models.IntegerField(choices=[(0, 'No reminder'), (1, '1 day'), (3, '3 days'), (7, '7 days')], default=1, verbose_name='Event Reminder Time'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username'),
        ),
        migrations.AddField(
            model_name='profile',
            name='email_footer',
            field=models.TextField(blank=True, null=True, verbose_name='Email footer'),
        ),
        migrations.AddField(
            model_name='user',
            name='notify_new_case',
            field=models.BooleanField(default=False, help_text='Whether or not to notify user about all new cases', verbose_name='Notify about new case'),
        ),
        migrations.AddField(
            model_name='user',
            name='notify_unassigned_letter',
            field=models.BooleanField(default=False, help_text='Whether or not to notify user about any letter in free cases', verbose_name='Notify about letter in free cases'),
        ),
        migrations.AlterField(
            model_name='user',
            name='picture',
            field=sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='Avatar'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
    ]
